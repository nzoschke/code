#!/usr/bin/env python

import argparse
import os
import shutil
from string import Template
import sys
import tempfile

parser = argparse.ArgumentParser()
parser.add_argument("src_dir",    help="source directory to read")
parser.add_argument("var",        help="name of environment variable to include in mappings", nargs="*")
parser.add_argument("--dest-dir", help="destination directory to write (default mkdtemp() dir)")

args = parser.parse_args()
src_dir, dest_dir = args.src_dir, args.dest_dir

if not os.path.exists(src_dir):
  print "error: can not read %s" % src_dir
  sys.exit(1)

if dest_dir:
  try:
    os.mkdir(dest_dir)
  except OSError, e:
    print "error: can not create %s" % dest_dir
    sys.exit(1)
else:
  dest_dir = tempfile.mkdtemp()

mapping = {v:os.environ.get(v) for v in args.var}
mapping["DEST_DIR"] = dest_dir

for dirpath, dirnames, filenames in os.walk(src_dir):
  dest_subdir = dirpath[len(src_dir) + 1:] # remove src_dir prefix

  for dirname in dirnames:
    os.mkdir(os.path.join(dest_dir, dest_subdir, dirname))

  for filename in filenames:
    src  = os.path.join(dirpath, filename)
    dest = os.path.join(dest_dir, dest_subdir, filename)

    if src.endswith(".tmpl"):
      tmpl = ""

      with open(src, "r") as f:
        tmpl = f.read()
        try:
          tmpl = Template(tmpl).substitute(mapping)
          dest = dest[:-5] # remove .tmpl suffix
        except KeyError, e:
          print "error: no value for %s in %s" % (e, filename)
          sys.exit(1)

      with open(dest, "w") as f:
        f.write(tmpl)
    else:
      shutil.copy(src, dest)

print dest_dir
sys.exit(0)